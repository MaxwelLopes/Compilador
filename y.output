Terminals unused in grammar

    TK_CAST_BOOL
    TK_FIM
    TK_ERROR


State 60 conflicts: 12 shift/reduce


Grammar

    0 $accept: S $end

    1 S: TK_TIPO_INT TK_MAIN '(' ')' BLOCO
    2  | %empty

    3 BLOCO: '{' INI COMANDOS FIM '}'

    4 INI: %empty

    5 FIM: %empty

    6 COMANDOS: COMANDO COMANDOS
    7         | %empty

    8 COMANDO: BLOCO
    9        | E ';'
   10        | IF
   11        | IF_ELSE
   12        | TK_TIPO_INT TK_ID ';'
   13        | TK_TIPO_INT TK_ID '=' E ';'
   14        | TK_TIPO_FLOAT TK_ID ';'
   15        | TK_TIPO_CHAR TK_ID ';'
   16        | TK_TIPO_BOOL TK_ID ';'
   17        | TK_TIPO_STRING TK_ID ';'

   18 IF: TK_IF '(' E ')' BLOCO

   19 IF_ELSE: TK_IF '(' E ')' BLOCO TK_ELSE BLOCO

   20 E: E '>' E
   21  | E '<' E
   22  | E EQ E
   23  | E NE E
   24  | E GE E
   25  | E LE E
   26  | E AND E
   27  | E OR E
   28  | NO E
   29  | E '+' E
   30  | E '-' E
   31  | E '*' E
   32  | E '/' E
   33  | TK_ID '=' E
   34  | TK_NUM
   35  | TK_REAL
   36  | TK_CHAR
   37  | TK_STRING
   38  | TK_FALSE
   39  | TK_TRUE
   40  | TK_CAST_FLOAT E
   41  | TK_CAST_INT E
   42  | TK_CAST_CHAR E
   43  | TK_ID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 18 19
    ')' (41) 1 18 19
    '*' (42) 31
    '+' (43) 29
    '-' (45) 30
    '/' (47) 32
    ';' (59) 9 12 13 14 15 16 17
    '<' (60) 21
    '=' (61) 13 33
    '>' (62) 20
    '{' (123) 3
    '}' (125) 3
    error (256)
    TK_NUM (258) 34
    TK_REAL (259) 35
    TK_TRUE (260) 39
    TK_FALSE (261) 38
    TK_CHAR (262) 36
    TK_STRING (263) 37
    TK_IF (264) 18 19
    TK_ELSE (265) 19
    TK_MAIN (266) 1
    TK_ID (267) 12 13 14 15 16 17 33 43
    TK_TIPO_INT (268) 1 12 13
    TK_TIPO_FLOAT (269) 14
    TK_TIPO_BOOL (270) 16
    TK_CAST_FLOAT (271) 40
    TK_CAST_INT (272) 41
    TK_CAST_BOOL (273)
    TK_TIPO_CHAR (274) 15
    TK_TIPO_STRING (275) 17
    TK_FIM (276)
    TK_ERROR (277)
    AND (278) 26
    OR (279) 27
    NO (280) 28
    EQ (281) 22
    NE (282) 23
    GE (283) 24
    LE (284) 25
    TK_CAST_CHAR (285) 42


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    S (44)
        on left: 1 2
        on right: 0
    BLOCO (45)
        on left: 3
        on right: 1 8 18 19
    INI (46)
        on left: 4
        on right: 3
    FIM (47)
        on left: 5
        on right: 3
    COMANDOS (48)
        on left: 6 7
        on right: 3 6
    COMANDO (49)
        on left: 8 9 10 11 12 13 14 15 16 17
        on right: 6
    IF (50)
        on left: 18
        on right: 10
    IF_ELSE (51)
        on left: 19
        on right: 11
    E (52)
        on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
        on right: 9 13 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 40 41 42


State 0

    0 $accept: . S $end

    TK_TIPO_INT  shift, and go to state 1

    $default  reduce using rule 2 (S)

    S  go to state 2


State 1

    1 S: TK_TIPO_INT . TK_MAIN '(' ')' BLOCO

    TK_MAIN  shift, and go to state 3


State 2

    0 $accept: S . $end

    $end  shift, and go to state 4


State 3

    1 S: TK_TIPO_INT TK_MAIN . '(' ')' BLOCO

    '('  shift, and go to state 5


State 4

    0 $accept: S $end .

    $default  accept


State 5

    1 S: TK_TIPO_INT TK_MAIN '(' . ')' BLOCO

    ')'  shift, and go to state 6


State 6

    1 S: TK_TIPO_INT TK_MAIN '(' ')' . BLOCO

    '{'  shift, and go to state 7

    BLOCO  go to state 8


State 7

    3 BLOCO: '{' . INI COMANDOS FIM '}'

    $default  reduce using rule 4 (INI)

    INI  go to state 9


State 8

    1 S: TK_TIPO_INT TK_MAIN '(' ')' BLOCO .

    $default  reduce using rule 1 (S)


State 9

    3 BLOCO: '{' INI . COMANDOS FIM '}'

    TK_NUM          shift, and go to state 10
    TK_REAL         shift, and go to state 11
    TK_TRUE         shift, and go to state 12
    TK_FALSE        shift, and go to state 13
    TK_CHAR         shift, and go to state 14
    TK_STRING       shift, and go to state 15
    TK_IF           shift, and go to state 16
    TK_ID           shift, and go to state 17
    TK_TIPO_INT     shift, and go to state 18
    TK_TIPO_FLOAT   shift, and go to state 19
    TK_TIPO_BOOL    shift, and go to state 20
    TK_CAST_FLOAT   shift, and go to state 21
    TK_CAST_INT     shift, and go to state 22
    TK_TIPO_CHAR    shift, and go to state 23
    TK_TIPO_STRING  shift, and go to state 24
    NO              shift, and go to state 25
    TK_CAST_CHAR    shift, and go to state 26
    '{'             shift, and go to state 7

    $default  reduce using rule 7 (COMANDOS)

    BLOCO     go to state 27
    COMANDOS  go to state 28
    COMANDO   go to state 29
    IF        go to state 30
    IF_ELSE   go to state 31
    E         go to state 32


State 10

   34 E: TK_NUM .

    $default  reduce using rule 34 (E)


State 11

   35 E: TK_REAL .

    $default  reduce using rule 35 (E)


State 12

   39 E: TK_TRUE .

    $default  reduce using rule 39 (E)


State 13

   38 E: TK_FALSE .

    $default  reduce using rule 38 (E)


State 14

   36 E: TK_CHAR .

    $default  reduce using rule 36 (E)


State 15

   37 E: TK_STRING .

    $default  reduce using rule 37 (E)


State 16

   18 IF: TK_IF . '(' E ')' BLOCO
   19 IF_ELSE: TK_IF . '(' E ')' BLOCO TK_ELSE BLOCO

    '('  shift, and go to state 33


State 17

   33 E: TK_ID . '=' E
   43  | TK_ID .

    '='  shift, and go to state 34

    $default  reduce using rule 43 (E)


State 18

   12 COMANDO: TK_TIPO_INT . TK_ID ';'
   13        | TK_TIPO_INT . TK_ID '=' E ';'

    TK_ID  shift, and go to state 35


State 19

   14 COMANDO: TK_TIPO_FLOAT . TK_ID ';'

    TK_ID  shift, and go to state 36


State 20

   16 COMANDO: TK_TIPO_BOOL . TK_ID ';'

    TK_ID  shift, and go to state 37


State 21

   40 E: TK_CAST_FLOAT . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 38


State 22

   41 E: TK_CAST_INT . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 39


State 23

   15 COMANDO: TK_TIPO_CHAR . TK_ID ';'

    TK_ID  shift, and go to state 40


State 24

   17 COMANDO: TK_TIPO_STRING . TK_ID ';'

    TK_ID  shift, and go to state 41


State 25

   28 E: NO . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 42


State 26

   42 E: TK_CAST_CHAR . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 43


State 27

    8 COMANDO: BLOCO .

    $default  reduce using rule 8 (COMANDO)


State 28

    3 BLOCO: '{' INI COMANDOS . FIM '}'

    $default  reduce using rule 5 (FIM)

    FIM  go to state 44


State 29

    6 COMANDOS: COMANDO . COMANDOS

    TK_NUM          shift, and go to state 10
    TK_REAL         shift, and go to state 11
    TK_TRUE         shift, and go to state 12
    TK_FALSE        shift, and go to state 13
    TK_CHAR         shift, and go to state 14
    TK_STRING       shift, and go to state 15
    TK_IF           shift, and go to state 16
    TK_ID           shift, and go to state 17
    TK_TIPO_INT     shift, and go to state 18
    TK_TIPO_FLOAT   shift, and go to state 19
    TK_TIPO_BOOL    shift, and go to state 20
    TK_CAST_FLOAT   shift, and go to state 21
    TK_CAST_INT     shift, and go to state 22
    TK_TIPO_CHAR    shift, and go to state 23
    TK_TIPO_STRING  shift, and go to state 24
    NO              shift, and go to state 25
    TK_CAST_CHAR    shift, and go to state 26
    '{'             shift, and go to state 7

    $default  reduce using rule 7 (COMANDOS)

    BLOCO     go to state 27
    COMANDOS  go to state 45
    COMANDO   go to state 29
    IF        go to state 30
    IF_ELSE   go to state 31
    E         go to state 32


State 30

   10 COMANDO: IF .

    $default  reduce using rule 10 (COMANDO)


State 31

   11 COMANDO: IF_ELSE .

    $default  reduce using rule 11 (COMANDO)


State 32

    9 COMANDO: E . ';'
   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    AND  shift, and go to state 46
    OR   shift, and go to state 47
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    GE   shift, and go to state 52
    LE   shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ';'  shift, and go to state 58


State 33

   18 IF: TK_IF '(' . E ')' BLOCO
   19 IF_ELSE: TK_IF '(' . E ')' BLOCO TK_ELSE BLOCO

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 59


State 34

   33 E: TK_ID '=' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 60


State 35

   12 COMANDO: TK_TIPO_INT TK_ID . ';'
   13        | TK_TIPO_INT TK_ID . '=' E ';'

    ';'  shift, and go to state 61
    '='  shift, and go to state 62


State 36

   14 COMANDO: TK_TIPO_FLOAT TK_ID . ';'

    ';'  shift, and go to state 63


State 37

   16 COMANDO: TK_TIPO_BOOL TK_ID . ';'

    ';'  shift, and go to state 64


State 38

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E
   40  | TK_CAST_FLOAT E .

    $default  reduce using rule 40 (E)


State 39

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E
   41  | TK_CAST_INT E .

    $default  reduce using rule 41 (E)


State 40

   15 COMANDO: TK_TIPO_CHAR TK_ID . ';'

    ';'  shift, and go to state 65


State 41

   17 COMANDO: TK_TIPO_STRING TK_ID . ';'

    ';'  shift, and go to state 66


State 42

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   28  | NO E .
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    GE   shift, and go to state 52
    LE   shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 28 (E)


State 43

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E
   42  | TK_CAST_CHAR E .

    $default  reduce using rule 42 (E)


State 44

    3 BLOCO: '{' INI COMANDOS FIM . '}'

    '}'  shift, and go to state 67


State 45

    6 COMANDOS: COMANDO COMANDOS .

    $default  reduce using rule 6 (COMANDOS)


State 46

   26 E: E AND . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 68


State 47

   27 E: E OR . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 69


State 48

   20 E: E '>' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 70


State 49

   21 E: E '<' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 71


State 50

   22 E: E EQ . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 72


State 51

   23 E: E NE . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 73


State 52

   24 E: E GE . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 74


State 53

   25 E: E LE . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 75


State 54

   29 E: E '+' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 76


State 55

   30 E: E '-' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 77


State 56

   31 E: E '*' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 78


State 57

   32 E: E '/' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 79


State 58

    9 COMANDO: E ';' .

    $default  reduce using rule 9 (COMANDO)


State 59

   18 IF: TK_IF '(' E . ')' BLOCO
   19 IF_ELSE: TK_IF '(' E . ')' BLOCO TK_ELSE BLOCO
   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    AND  shift, and go to state 46
    OR   shift, and go to state 47
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    GE   shift, and go to state 52
    LE   shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ')'  shift, and go to state 80


State 60

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E
   33  | TK_ID '=' E .

    AND  shift, and go to state 46
    OR   shift, and go to state 47
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    GE   shift, and go to state 52
    LE   shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    AND       [reduce using rule 33 (E)]
    OR        [reduce using rule 33 (E)]
    '>'       [reduce using rule 33 (E)]
    '<'       [reduce using rule 33 (E)]
    EQ        [reduce using rule 33 (E)]
    NE        [reduce using rule 33 (E)]
    GE        [reduce using rule 33 (E)]
    LE        [reduce using rule 33 (E)]
    '+'       [reduce using rule 33 (E)]
    '-'       [reduce using rule 33 (E)]
    '*'       [reduce using rule 33 (E)]
    '/'       [reduce using rule 33 (E)]
    $default  reduce using rule 33 (E)


State 61

   12 COMANDO: TK_TIPO_INT TK_ID ';' .

    $default  reduce using rule 12 (COMANDO)


State 62

   13 COMANDO: TK_TIPO_INT TK_ID '=' . E ';'

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 21
    TK_CAST_INT    shift, and go to state 22
    NO             shift, and go to state 25
    TK_CAST_CHAR   shift, and go to state 26

    E  go to state 81


State 63

   14 COMANDO: TK_TIPO_FLOAT TK_ID ';' .

    $default  reduce using rule 14 (COMANDO)


State 64

   16 COMANDO: TK_TIPO_BOOL TK_ID ';' .

    $default  reduce using rule 16 (COMANDO)


State 65

   15 COMANDO: TK_TIPO_CHAR TK_ID ';' .

    $default  reduce using rule 15 (COMANDO)


State 66

   17 COMANDO: TK_TIPO_STRING TK_ID ';' .

    $default  reduce using rule 17 (COMANDO)


State 67

    3 BLOCO: '{' INI COMANDOS FIM '}' .

    $default  reduce using rule 3 (BLOCO)


State 68

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   26  | E AND E .
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    GE   shift, and go to state 52
    LE   shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 26 (E)


State 69

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   27  | E OR E .
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    GE   shift, and go to state 52
    LE   shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 27 (E)


State 70

   20 E: E . '>' E
   20  | E '>' E .
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 20 (E)


State 71

   20 E: E . '>' E
   21  | E . '<' E
   21  | E '<' E .
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 21 (E)


State 72

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   22  | E EQ E .
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 22 (E)


State 73

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   23  | E NE E .
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 23 (E)


State 74

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   24  | E GE E .
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 24 (E)


State 75

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   25  | E LE E .
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 25 (E)


State 76

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   29  | E '+' E .
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 29 (E)


State 77

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   30  | E '-' E .
   31  | E . '*' E
   32  | E . '/' E

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57

    $default  reduce using rule 30 (E)


State 78

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   31  | E '*' E .
   32  | E . '/' E

    $default  reduce using rule 31 (E)


State 79

   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E
   32  | E '/' E .

    $default  reduce using rule 32 (E)


State 80

   18 IF: TK_IF '(' E ')' . BLOCO
   19 IF_ELSE: TK_IF '(' E ')' . BLOCO TK_ELSE BLOCO

    '{'  shift, and go to state 7

    BLOCO  go to state 82


State 81

   13 COMANDO: TK_TIPO_INT TK_ID '=' E . ';'
   20 E: E . '>' E
   21  | E . '<' E
   22  | E . EQ E
   23  | E . NE E
   24  | E . GE E
   25  | E . LE E
   26  | E . AND E
   27  | E . OR E
   29  | E . '+' E
   30  | E . '-' E
   31  | E . '*' E
   32  | E . '/' E

    AND  shift, and go to state 46
    OR   shift, and go to state 47
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    EQ   shift, and go to state 50
    NE   shift, and go to state 51
    GE   shift, and go to state 52
    LE   shift, and go to state 53
    '+'  shift, and go to state 54
    '-'  shift, and go to state 55
    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    ';'  shift, and go to state 83


State 82

   18 IF: TK_IF '(' E ')' BLOCO .
   19 IF_ELSE: TK_IF '(' E ')' BLOCO . TK_ELSE BLOCO

    TK_ELSE  shift, and go to state 84

    $default  reduce using rule 18 (IF)


State 83

   13 COMANDO: TK_TIPO_INT TK_ID '=' E ';' .

    $default  reduce using rule 13 (COMANDO)


State 84

   19 IF_ELSE: TK_IF '(' E ')' BLOCO TK_ELSE . BLOCO

    '{'  shift, and go to state 7

    BLOCO  go to state 85


State 85

   19 IF_ELSE: TK_IF '(' E ')' BLOCO TK_ELSE BLOCO .

    $default  reduce using rule 19 (IF_ELSE)
