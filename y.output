Terminals unused in grammar

    TK_REAL
    TK_TRUE
    TK_FALSE
    TK_CHAR
    TK_CAST_FLOAT
    TK_CAST_INT
    TK_CAST_BOOL
    TK_FIM
    TK_ERROR
    AND
    OR
    NO
    EQ
    NE
    GE
    LE
    TK_CAST_CHAR


Grammar

    0 $accept: S $end

    1 S: TK_TIPO_INT TK_MAIN '(' ')' BLOCO

    2 BLOCO: '{' COMANDOS '}'

    3 COMANDOS: COMANDO COMANDOS
    4         | %empty

    5 COMANDO: G ';'
    6        | TK_TIPO_INT TK_ID ';'
    7        | TK_TIPO_FLOAT TK_ID ';'
    8        | TK_TIPO_CHAR TK_ID ';'
    9        | TK_TIPO_BOOL TK_ID ';'

   10 G: X

   11 X: X '<' E
   12  | X '>' E
   13  | E

   14 E: E '+' T
   15  | E '-' T
   16  | T

   17 T: T '*' F
   18  | T '/' F
   19  | F

   20 F: TK_NUM
   21  | TK_ID
   22  | '(' E ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 22
    ')' (41) 1 22
    '*' (42) 17
    '+' (43) 14
    '-' (45) 15
    '/' (47) 18
    ';' (59) 5 6 7 8 9
    '<' (60) 11
    '>' (62) 12
    '{' (123) 2
    '}' (125) 2
    error (256)
    TK_NUM (258) 20
    TK_REAL (259)
    TK_TRUE (260)
    TK_FALSE (261)
    TK_CHAR (262)
    TK_MAIN (263) 1
    TK_ID (264) 6 7 8 9 21
    TK_TIPO_INT (265) 1 6
    TK_TIPO_FLOAT (266) 7
    TK_TIPO_BOOL (267) 9
    TK_CAST_FLOAT (268)
    TK_CAST_INT (269)
    TK_CAST_BOOL (270)
    TK_TIPO_CHAR (271) 8
    TK_FIM (272)
    TK_ERROR (273)
    AND (274)
    OR (275)
    NO (276)
    EQ (277)
    NE (278)
    GE (279)
    LE (280)
    TK_CAST_CHAR (281)


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    S (39)
        on left: 1
        on right: 0
    BLOCO (40)
        on left: 2
        on right: 1
    COMANDOS (41)
        on left: 3 4
        on right: 2 3
    COMANDO (42)
        on left: 5 6 7 8 9
        on right: 3
    G (43)
        on left: 10
        on right: 5
    X (44)
        on left: 11 12 13
        on right: 10 11 12
    E (45)
        on left: 14 15 16
        on right: 11 12 13 14 15 22
    T (46)
        on left: 17 18 19
        on right: 14 15 16 17 18
    F (47)
        on left: 20 21 22
        on right: 17 18 19


State 0

    0 $accept: . S $end

    TK_TIPO_INT  shift, and go to state 1

    S  go to state 2


State 1

    1 S: TK_TIPO_INT . TK_MAIN '(' ')' BLOCO

    TK_MAIN  shift, and go to state 3


State 2

    0 $accept: S . $end

    $end  shift, and go to state 4


State 3

    1 S: TK_TIPO_INT TK_MAIN . '(' ')' BLOCO

    '('  shift, and go to state 5


State 4

    0 $accept: S $end .

    $default  accept


State 5

    1 S: TK_TIPO_INT TK_MAIN '(' . ')' BLOCO

    ')'  shift, and go to state 6


State 6

    1 S: TK_TIPO_INT TK_MAIN '(' ')' . BLOCO

    '{'  shift, and go to state 7

    BLOCO  go to state 8


State 7

    2 BLOCO: '{' . COMANDOS '}'

    TK_NUM         shift, and go to state 9
    TK_ID          shift, and go to state 10
    TK_TIPO_INT    shift, and go to state 11
    TK_TIPO_FLOAT  shift, and go to state 12
    TK_TIPO_BOOL   shift, and go to state 13
    TK_TIPO_CHAR   shift, and go to state 14
    '('            shift, and go to state 15

    $default  reduce using rule 4 (COMANDOS)

    COMANDOS  go to state 16
    COMANDO   go to state 17
    G         go to state 18
    X         go to state 19
    E         go to state 20
    T         go to state 21
    F         go to state 22


State 8

    1 S: TK_TIPO_INT TK_MAIN '(' ')' BLOCO .

    $default  reduce using rule 1 (S)


State 9

   20 F: TK_NUM .

    $default  reduce using rule 20 (F)


State 10

   21 F: TK_ID .

    $default  reduce using rule 21 (F)


State 11

    6 COMANDO: TK_TIPO_INT . TK_ID ';'

    TK_ID  shift, and go to state 23


State 12

    7 COMANDO: TK_TIPO_FLOAT . TK_ID ';'

    TK_ID  shift, and go to state 24


State 13

    9 COMANDO: TK_TIPO_BOOL . TK_ID ';'

    TK_ID  shift, and go to state 25


State 14

    8 COMANDO: TK_TIPO_CHAR . TK_ID ';'

    TK_ID  shift, and go to state 26


State 15

   22 F: '(' . E ')'

    TK_NUM  shift, and go to state 9
    TK_ID   shift, and go to state 10
    '('     shift, and go to state 15

    E  go to state 27
    T  go to state 21
    F  go to state 22


State 16

    2 BLOCO: '{' COMANDOS . '}'

    '}'  shift, and go to state 28


State 17

    3 COMANDOS: COMANDO . COMANDOS

    TK_NUM         shift, and go to state 9
    TK_ID          shift, and go to state 10
    TK_TIPO_INT    shift, and go to state 11
    TK_TIPO_FLOAT  shift, and go to state 12
    TK_TIPO_BOOL   shift, and go to state 13
    TK_TIPO_CHAR   shift, and go to state 14
    '('            shift, and go to state 15

    $default  reduce using rule 4 (COMANDOS)

    COMANDOS  go to state 29
    COMANDO   go to state 17
    G         go to state 18
    X         go to state 19
    E         go to state 20
    T         go to state 21
    F         go to state 22


State 18

    5 COMANDO: G . ';'

    ';'  shift, and go to state 30


State 19

   10 G: X .
   11 X: X . '<' E
   12  | X . '>' E

    '>'  shift, and go to state 31
    '<'  shift, and go to state 32

    $default  reduce using rule 10 (G)


State 20

   13 X: E .
   14 E: E . '+' T
   15  | E . '-' T

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34

    $default  reduce using rule 13 (X)


State 21

   16 E: T .
   17 T: T . '*' F
   18  | T . '/' F

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 16 (E)


State 22

   19 T: F .

    $default  reduce using rule 19 (T)


State 23

    6 COMANDO: TK_TIPO_INT TK_ID . ';'

    ';'  shift, and go to state 37


State 24

    7 COMANDO: TK_TIPO_FLOAT TK_ID . ';'

    ';'  shift, and go to state 38


State 25

    9 COMANDO: TK_TIPO_BOOL TK_ID . ';'

    ';'  shift, and go to state 39


State 26

    8 COMANDO: TK_TIPO_CHAR TK_ID . ';'

    ';'  shift, and go to state 40


State 27

   14 E: E . '+' T
   15  | E . '-' T
   22 F: '(' E . ')'

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    ')'  shift, and go to state 41


State 28

    2 BLOCO: '{' COMANDOS '}' .

    $default  reduce using rule 2 (BLOCO)


State 29

    3 COMANDOS: COMANDO COMANDOS .

    $default  reduce using rule 3 (COMANDOS)


State 30

    5 COMANDO: G ';' .

    $default  reduce using rule 5 (COMANDO)


State 31

   12 X: X '>' . E

    TK_NUM  shift, and go to state 9
    TK_ID   shift, and go to state 10
    '('     shift, and go to state 15

    E  go to state 42
    T  go to state 21
    F  go to state 22


State 32

   11 X: X '<' . E

    TK_NUM  shift, and go to state 9
    TK_ID   shift, and go to state 10
    '('     shift, and go to state 15

    E  go to state 43
    T  go to state 21
    F  go to state 22


State 33

   14 E: E '+' . T

    TK_NUM  shift, and go to state 9
    TK_ID   shift, and go to state 10
    '('     shift, and go to state 15

    T  go to state 44
    F  go to state 22


State 34

   15 E: E '-' . T

    TK_NUM  shift, and go to state 9
    TK_ID   shift, and go to state 10
    '('     shift, and go to state 15

    T  go to state 45
    F  go to state 22


State 35

   17 T: T '*' . F

    TK_NUM  shift, and go to state 9
    TK_ID   shift, and go to state 10
    '('     shift, and go to state 15

    F  go to state 46


State 36

   18 T: T '/' . F

    TK_NUM  shift, and go to state 9
    TK_ID   shift, and go to state 10
    '('     shift, and go to state 15

    F  go to state 47


State 37

    6 COMANDO: TK_TIPO_INT TK_ID ';' .

    $default  reduce using rule 6 (COMANDO)


State 38

    7 COMANDO: TK_TIPO_FLOAT TK_ID ';' .

    $default  reduce using rule 7 (COMANDO)


State 39

    9 COMANDO: TK_TIPO_BOOL TK_ID ';' .

    $default  reduce using rule 9 (COMANDO)


State 40

    8 COMANDO: TK_TIPO_CHAR TK_ID ';' .

    $default  reduce using rule 8 (COMANDO)


State 41

   22 F: '(' E ')' .

    $default  reduce using rule 22 (F)


State 42

   12 X: X '>' E .
   14 E: E . '+' T
   15  | E . '-' T

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34

    $default  reduce using rule 12 (X)


State 43

   11 X: X '<' E .
   14 E: E . '+' T
   15  | E . '-' T

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34

    $default  reduce using rule 11 (X)


State 44

   14 E: E '+' T .
   17 T: T . '*' F
   18  | T . '/' F

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 14 (E)


State 45

   15 E: E '-' T .
   17 T: T . '*' F
   18  | T . '/' F

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 15 (E)


State 46

   17 T: T '*' F .

    $default  reduce using rule 17 (T)


State 47

   18 T: T '/' F .

    $default  reduce using rule 18 (T)
