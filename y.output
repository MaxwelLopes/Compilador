Terminals unused in grammar

    TK_CAST_BOOL
    TK_FIM
    TK_ERROR


State 76 conflicts: 12 shift/reduce


Grammar

    0 $accept: S $end

    1 S: TK_TIPO_INT TK_MAIN '(' ')' BLOCO
    2  | %empty

    3 BLOCO: '{' INI COMANDOS FIM '}'

    4 INI: %empty

    5 FIM: %empty

    6 COMANDOS: COMANDO COMANDOS
    7         | %empty

    8 COMANDO: BLOCO
    9        | E ';'
   10        | IF
   11        | IF_ELSE
   12        | WHILE
   13        | DO_WHILE
   14        | FOR
   15        | SWITCH
   16        | TK_TIPO_INT TK_ID ';'
   17        | TK_TIPO_INT TK_ID '=' E ';'
   18        | TK_TIPO_FLOAT TK_ID ';'
   19        | TK_TIPO_CHAR TK_ID ';'
   20        | TK_TIPO_BOOL TK_ID ';'
   21        | TK_TIPO_STRING TK_ID ';'

   22 IF: TK_IF '(' E ')' BLOCO

   23 IF_ELSE: TK_IF '(' E ')' BLOCO TK_ELSE BLOCO

   24 FOR: TK_FOR '(' E ';' E ';' E ')' BLOCO

   25 WHILE: TK_WHILE '(' E ')' BLOCO

   26 DO_WHILE: TK_DO BLOCO TK_WHILE '(' E ')' ';'

   27 SWITCH: TK_SWITCH '(' E ')' BLOCO_SWITCH

   28 BLOCO_SWITCH: '{' CASE_LISTA '}'

   29 CASE_LISTA: CASE_STMT CASE_LISTA
   30           | %empty

   31 CASE_STMT: CASE

   32 CASE: TK_CASE E TK_DP COMANDOS
   33     | TK_DEFAULT TK_DP COMANDOS

   34 E: E '>' E
   35  | E '<' E
   36  | E EQ E
   37  | E NE E
   38  | E GE E
   39  | E LE E
   40  | E AND E
   41  | E OR E
   42  | NO E
   43  | E '+' E
   44  | E '-' E
   45  | E '*' E
   46  | E '/' E
   47  | TK_ID '=' E
   48  | TK_NUM
   49  | TK_REAL
   50  | TK_CHAR
   51  | TK_STRING
   52  | TK_FALSE
   53  | TK_TRUE
   54  | TK_CAST_FLOAT E
   55  | TK_CAST_INT E
   56  | TK_CAST_CHAR E
   57  | TK_ID
   58  | %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 22 23 24 25 26 27
    ')' (41) 1 22 23 24 25 26 27
    '*' (42) 45
    '+' (43) 43
    '-' (45) 44
    '/' (47) 46
    ';' (59) 9 16 17 18 19 20 21 24 26
    '<' (60) 35
    '=' (61) 17 47
    '>' (62) 34
    '{' (123) 3 28
    '}' (125) 3 28
    error (256)
    TK_NUM (258) 48
    TK_REAL (259) 49
    TK_TRUE (260) 53
    TK_FALSE (261) 52
    TK_CHAR (262) 50
    TK_STRING (263) 51
    TK_IF (264) 22 23
    TK_ELSE (265) 23
    TK_FOR (266) 24
    TK_WHILE (267) 25 26
    TK_DO (268) 26
    TK_SWITCH (269) 27
    TK_CASE (270) 32
    TK_DP (271) 32 33
    TK_DEFAULT (272) 33
    TK_MAIN (273) 1
    TK_ID (274) 16 17 18 19 20 21 47 57
    TK_TIPO_INT (275) 1 16 17
    TK_TIPO_FLOAT (276) 18
    TK_TIPO_BOOL (277) 20
    TK_CAST_FLOAT (278) 54
    TK_CAST_INT (279) 55
    TK_CAST_BOOL (280)
    TK_TIPO_CHAR (281) 19
    TK_TIPO_STRING (282) 21
    TK_FIM (283)
    TK_ERROR (284)
    AND (285) 40
    OR (286) 41
    NO (287) 42
    EQ (288) 36
    NE (289) 37
    GE (290) 38
    LE (291) 39
    TK_CAST_CHAR (292) 56


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    S (51)
        on left: 1 2
        on right: 0
    BLOCO (52)
        on left: 3
        on right: 1 8 22 23 24 25 26
    INI (53)
        on left: 4
        on right: 3
    FIM (54)
        on left: 5
        on right: 3
    COMANDOS (55)
        on left: 6 7
        on right: 3 6 32 33
    COMANDO (56)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21
        on right: 6
    IF (57)
        on left: 22
        on right: 10
    IF_ELSE (58)
        on left: 23
        on right: 11
    FOR (59)
        on left: 24
        on right: 14
    WHILE (60)
        on left: 25
        on right: 12
    DO_WHILE (61)
        on left: 26
        on right: 13
    SWITCH (62)
        on left: 27
        on right: 15
    BLOCO_SWITCH (63)
        on left: 28
        on right: 27
    CASE_LISTA (64)
        on left: 29 30
        on right: 28 29
    CASE_STMT (65)
        on left: 31
        on right: 29
    CASE (66)
        on left: 32 33
        on right: 31
    E (67)
        on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
        on right: 9 17 22 23 24 25 26 27 32 34 35 36 37 38 39 40 41 42 43 44 45 46 47 54 55 56


State 0

    0 $accept: . S $end

    TK_TIPO_INT  shift, and go to state 1

    $default  reduce using rule 2 (S)

    S  go to state 2


State 1

    1 S: TK_TIPO_INT . TK_MAIN '(' ')' BLOCO

    TK_MAIN  shift, and go to state 3


State 2

    0 $accept: S . $end

    $end  shift, and go to state 4


State 3

    1 S: TK_TIPO_INT TK_MAIN . '(' ')' BLOCO

    '('  shift, and go to state 5


State 4

    0 $accept: S $end .

    $default  accept


State 5

    1 S: TK_TIPO_INT TK_MAIN '(' . ')' BLOCO

    ')'  shift, and go to state 6


State 6

    1 S: TK_TIPO_INT TK_MAIN '(' ')' . BLOCO

    '{'  shift, and go to state 7

    BLOCO  go to state 8


State 7

    3 BLOCO: '{' . INI COMANDOS FIM '}'

    $default  reduce using rule 4 (INI)

    INI  go to state 9


State 8

    1 S: TK_TIPO_INT TK_MAIN '(' ')' BLOCO .

    $default  reduce using rule 1 (S)


State 9

    3 BLOCO: '{' INI . COMANDOS FIM '}'

    TK_NUM          shift, and go to state 10
    TK_REAL         shift, and go to state 11
    TK_TRUE         shift, and go to state 12
    TK_FALSE        shift, and go to state 13
    TK_CHAR         shift, and go to state 14
    TK_STRING       shift, and go to state 15
    TK_IF           shift, and go to state 16
    TK_FOR          shift, and go to state 17
    TK_WHILE        shift, and go to state 18
    TK_DO           shift, and go to state 19
    TK_SWITCH       shift, and go to state 20
    TK_ID           shift, and go to state 21
    TK_TIPO_INT     shift, and go to state 22
    TK_TIPO_FLOAT   shift, and go to state 23
    TK_TIPO_BOOL    shift, and go to state 24
    TK_CAST_FLOAT   shift, and go to state 25
    TK_CAST_INT     shift, and go to state 26
    TK_TIPO_CHAR    shift, and go to state 27
    TK_TIPO_STRING  shift, and go to state 28
    NO              shift, and go to state 29
    TK_CAST_CHAR    shift, and go to state 30
    '{'             shift, and go to state 7

    '}'       reduce using rule 7 (COMANDOS)
    $default  reduce using rule 58 (E)

    BLOCO     go to state 31
    COMANDOS  go to state 32
    COMANDO   go to state 33
    IF        go to state 34
    IF_ELSE   go to state 35
    FOR       go to state 36
    WHILE     go to state 37
    DO_WHILE  go to state 38
    SWITCH    go to state 39
    E         go to state 40


State 10

   48 E: TK_NUM .

    $default  reduce using rule 48 (E)


State 11

   49 E: TK_REAL .

    $default  reduce using rule 49 (E)


State 12

   53 E: TK_TRUE .

    $default  reduce using rule 53 (E)


State 13

   52 E: TK_FALSE .

    $default  reduce using rule 52 (E)


State 14

   50 E: TK_CHAR .

    $default  reduce using rule 50 (E)


State 15

   51 E: TK_STRING .

    $default  reduce using rule 51 (E)


State 16

   22 IF: TK_IF . '(' E ')' BLOCO
   23 IF_ELSE: TK_IF . '(' E ')' BLOCO TK_ELSE BLOCO

    '('  shift, and go to state 41


State 17

   24 FOR: TK_FOR . '(' E ';' E ';' E ')' BLOCO

    '('  shift, and go to state 42


State 18

   25 WHILE: TK_WHILE . '(' E ')' BLOCO

    '('  shift, and go to state 43


State 19

   26 DO_WHILE: TK_DO . BLOCO TK_WHILE '(' E ')' ';'

    '{'  shift, and go to state 7

    BLOCO  go to state 44


State 20

   27 SWITCH: TK_SWITCH . '(' E ')' BLOCO_SWITCH

    '('  shift, and go to state 45


State 21

   47 E: TK_ID . '=' E
   57  | TK_ID .

    '='  shift, and go to state 46

    $default  reduce using rule 57 (E)


State 22

   16 COMANDO: TK_TIPO_INT . TK_ID ';'
   17        | TK_TIPO_INT . TK_ID '=' E ';'

    TK_ID  shift, and go to state 47


State 23

   18 COMANDO: TK_TIPO_FLOAT . TK_ID ';'

    TK_ID  shift, and go to state 48


State 24

   20 COMANDO: TK_TIPO_BOOL . TK_ID ';'

    TK_ID  shift, and go to state 49


State 25

   54 E: TK_CAST_FLOAT . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 50


State 26

   55 E: TK_CAST_INT . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 51


State 27

   19 COMANDO: TK_TIPO_CHAR . TK_ID ';'

    TK_ID  shift, and go to state 52


State 28

   21 COMANDO: TK_TIPO_STRING . TK_ID ';'

    TK_ID  shift, and go to state 53


State 29

   42 E: NO . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 54


State 30

   56 E: TK_CAST_CHAR . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 55


State 31

    8 COMANDO: BLOCO .

    $default  reduce using rule 8 (COMANDO)


State 32

    3 BLOCO: '{' INI COMANDOS . FIM '}'

    $default  reduce using rule 5 (FIM)

    FIM  go to state 56


State 33

    6 COMANDOS: COMANDO . COMANDOS

    TK_NUM          shift, and go to state 10
    TK_REAL         shift, and go to state 11
    TK_TRUE         shift, and go to state 12
    TK_FALSE        shift, and go to state 13
    TK_CHAR         shift, and go to state 14
    TK_STRING       shift, and go to state 15
    TK_IF           shift, and go to state 16
    TK_FOR          shift, and go to state 17
    TK_WHILE        shift, and go to state 18
    TK_DO           shift, and go to state 19
    TK_SWITCH       shift, and go to state 20
    TK_ID           shift, and go to state 21
    TK_TIPO_INT     shift, and go to state 22
    TK_TIPO_FLOAT   shift, and go to state 23
    TK_TIPO_BOOL    shift, and go to state 24
    TK_CAST_FLOAT   shift, and go to state 25
    TK_CAST_INT     shift, and go to state 26
    TK_TIPO_CHAR    shift, and go to state 27
    TK_TIPO_STRING  shift, and go to state 28
    NO              shift, and go to state 29
    TK_CAST_CHAR    shift, and go to state 30
    '{'             shift, and go to state 7

    TK_CASE     reduce using rule 7 (COMANDOS)
    TK_DEFAULT  reduce using rule 7 (COMANDOS)
    '}'         reduce using rule 7 (COMANDOS)
    $default    reduce using rule 58 (E)

    BLOCO     go to state 31
    COMANDOS  go to state 57
    COMANDO   go to state 33
    IF        go to state 34
    IF_ELSE   go to state 35
    FOR       go to state 36
    WHILE     go to state 37
    DO_WHILE  go to state 38
    SWITCH    go to state 39
    E         go to state 40


State 34

   10 COMANDO: IF .

    $default  reduce using rule 10 (COMANDO)


State 35

   11 COMANDO: IF_ELSE .

    $default  reduce using rule 11 (COMANDO)


State 36

   14 COMANDO: FOR .

    $default  reduce using rule 14 (COMANDO)


State 37

   12 COMANDO: WHILE .

    $default  reduce using rule 12 (COMANDO)


State 38

   13 COMANDO: DO_WHILE .

    $default  reduce using rule 13 (COMANDO)


State 39

   15 COMANDO: SWITCH .

    $default  reduce using rule 15 (COMANDO)


State 40

    9 COMANDO: E . ';'
   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    ';'  shift, and go to state 70


State 41

   22 IF: TK_IF '(' . E ')' BLOCO
   23 IF_ELSE: TK_IF '(' . E ')' BLOCO TK_ELSE BLOCO

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 71


State 42

   24 FOR: TK_FOR '(' . E ';' E ';' E ')' BLOCO

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 72


State 43

   25 WHILE: TK_WHILE '(' . E ')' BLOCO

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 73


State 44

   26 DO_WHILE: TK_DO BLOCO . TK_WHILE '(' E ')' ';'

    TK_WHILE  shift, and go to state 74


State 45

   27 SWITCH: TK_SWITCH '(' . E ')' BLOCO_SWITCH

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 75


State 46

   47 E: TK_ID '=' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 76


State 47

   16 COMANDO: TK_TIPO_INT TK_ID . ';'
   17        | TK_TIPO_INT TK_ID . '=' E ';'

    ';'  shift, and go to state 77
    '='  shift, and go to state 78


State 48

   18 COMANDO: TK_TIPO_FLOAT TK_ID . ';'

    ';'  shift, and go to state 79


State 49

   20 COMANDO: TK_TIPO_BOOL TK_ID . ';'

    ';'  shift, and go to state 80


State 50

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E
   54  | TK_CAST_FLOAT E .

    $default  reduce using rule 54 (E)


State 51

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E
   55  | TK_CAST_INT E .

    $default  reduce using rule 55 (E)


State 52

   19 COMANDO: TK_TIPO_CHAR TK_ID . ';'

    ';'  shift, and go to state 81


State 53

   21 COMANDO: TK_TIPO_STRING TK_ID . ';'

    ';'  shift, and go to state 82


State 54

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   42  | NO E .
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 42 (E)


State 55

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E
   56  | TK_CAST_CHAR E .

    $default  reduce using rule 56 (E)


State 56

    3 BLOCO: '{' INI COMANDOS FIM . '}'

    '}'  shift, and go to state 83


State 57

    6 COMANDOS: COMANDO COMANDOS .

    $default  reduce using rule 6 (COMANDOS)


State 58

   40 E: E AND . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 84


State 59

   41 E: E OR . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 85


State 60

   34 E: E '>' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 86


State 61

   35 E: E '<' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 87


State 62

   36 E: E EQ . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 88


State 63

   37 E: E NE . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 89


State 64

   38 E: E GE . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 90


State 65

   39 E: E LE . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 91


State 66

   43 E: E '+' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 92


State 67

   44 E: E '-' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 93


State 68

   45 E: E '*' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 94


State 69

   46 E: E '/' . E

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 95


State 70

    9 COMANDO: E ';' .

    $default  reduce using rule 9 (COMANDO)


State 71

   22 IF: TK_IF '(' E . ')' BLOCO
   23 IF_ELSE: TK_IF '(' E . ')' BLOCO TK_ELSE BLOCO
   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    ')'  shift, and go to state 96


State 72

   24 FOR: TK_FOR '(' E . ';' E ';' E ')' BLOCO
   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    ';'  shift, and go to state 97


State 73

   25 WHILE: TK_WHILE '(' E . ')' BLOCO
   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    ')'  shift, and go to state 98


State 74

   26 DO_WHILE: TK_DO BLOCO TK_WHILE . '(' E ')' ';'

    '('  shift, and go to state 99


State 75

   27 SWITCH: TK_SWITCH '(' E . ')' BLOCO_SWITCH
   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    ')'  shift, and go to state 100


State 76

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E
   47  | TK_ID '=' E .

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    AND       [reduce using rule 47 (E)]
    OR        [reduce using rule 47 (E)]
    '>'       [reduce using rule 47 (E)]
    '<'       [reduce using rule 47 (E)]
    EQ        [reduce using rule 47 (E)]
    NE        [reduce using rule 47 (E)]
    GE        [reduce using rule 47 (E)]
    LE        [reduce using rule 47 (E)]
    '+'       [reduce using rule 47 (E)]
    '-'       [reduce using rule 47 (E)]
    '*'       [reduce using rule 47 (E)]
    '/'       [reduce using rule 47 (E)]
    $default  reduce using rule 47 (E)


State 77

   16 COMANDO: TK_TIPO_INT TK_ID ';' .

    $default  reduce using rule 16 (COMANDO)


State 78

   17 COMANDO: TK_TIPO_INT TK_ID '=' . E ';'

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 101


State 79

   18 COMANDO: TK_TIPO_FLOAT TK_ID ';' .

    $default  reduce using rule 18 (COMANDO)


State 80

   20 COMANDO: TK_TIPO_BOOL TK_ID ';' .

    $default  reduce using rule 20 (COMANDO)


State 81

   19 COMANDO: TK_TIPO_CHAR TK_ID ';' .

    $default  reduce using rule 19 (COMANDO)


State 82

   21 COMANDO: TK_TIPO_STRING TK_ID ';' .

    $default  reduce using rule 21 (COMANDO)


State 83

    3 BLOCO: '{' INI COMANDOS FIM '}' .

    $default  reduce using rule 3 (BLOCO)


State 84

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   40  | E AND E .
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 40 (E)


State 85

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   41  | E OR E .
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 41 (E)


State 86

   34 E: E . '>' E
   34  | E '>' E .
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 34 (E)


State 87

   34 E: E . '>' E
   35  | E . '<' E
   35  | E '<' E .
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 35 (E)


State 88

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   36  | E EQ E .
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 36 (E)


State 89

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   37  | E NE E .
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 37 (E)


State 90

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   38  | E GE E .
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 38 (E)


State 91

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   39  | E LE E .
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 39 (E)


State 92

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   43  | E '+' E .
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 43 (E)


State 93

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   44  | E '-' E .
   45  | E . '*' E
   46  | E . '/' E

    '*'  shift, and go to state 68
    '/'  shift, and go to state 69

    $default  reduce using rule 44 (E)


State 94

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   45  | E '*' E .
   46  | E . '/' E

    $default  reduce using rule 45 (E)


State 95

   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E
   46  | E '/' E .

    $default  reduce using rule 46 (E)


State 96

   22 IF: TK_IF '(' E ')' . BLOCO
   23 IF_ELSE: TK_IF '(' E ')' . BLOCO TK_ELSE BLOCO

    '{'  shift, and go to state 7

    BLOCO  go to state 102


State 97

   24 FOR: TK_FOR '(' E ';' . E ';' E ')' BLOCO

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 103


State 98

   25 WHILE: TK_WHILE '(' E ')' . BLOCO

    '{'  shift, and go to state 7

    BLOCO  go to state 104


State 99

   26 DO_WHILE: TK_DO BLOCO TK_WHILE '(' . E ')' ';'

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 105


State 100

   27 SWITCH: TK_SWITCH '(' E ')' . BLOCO_SWITCH

    '{'  shift, and go to state 106

    BLOCO_SWITCH  go to state 107


State 101

   17 COMANDO: TK_TIPO_INT TK_ID '=' E . ';'
   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    ';'  shift, and go to state 108


State 102

   22 IF: TK_IF '(' E ')' BLOCO .
   23 IF_ELSE: TK_IF '(' E ')' BLOCO . TK_ELSE BLOCO

    TK_ELSE  shift, and go to state 109

    $default  reduce using rule 22 (IF)


State 103

   24 FOR: TK_FOR '(' E ';' E . ';' E ')' BLOCO
   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    ';'  shift, and go to state 110


State 104

   25 WHILE: TK_WHILE '(' E ')' BLOCO .

    $default  reduce using rule 25 (WHILE)


State 105

   26 DO_WHILE: TK_DO BLOCO TK_WHILE '(' E . ')' ';'
   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    ')'  shift, and go to state 111


State 106

   28 BLOCO_SWITCH: '{' . CASE_LISTA '}'

    TK_CASE     shift, and go to state 112
    TK_DEFAULT  shift, and go to state 113

    $default  reduce using rule 30 (CASE_LISTA)

    CASE_LISTA  go to state 114
    CASE_STMT   go to state 115
    CASE        go to state 116


State 107

   27 SWITCH: TK_SWITCH '(' E ')' BLOCO_SWITCH .

    $default  reduce using rule 27 (SWITCH)


State 108

   17 COMANDO: TK_TIPO_INT TK_ID '=' E ';' .

    $default  reduce using rule 17 (COMANDO)


State 109

   23 IF_ELSE: TK_IF '(' E ')' BLOCO TK_ELSE . BLOCO

    '{'  shift, and go to state 7

    BLOCO  go to state 117


State 110

   24 FOR: TK_FOR '(' E ';' E ';' . E ')' BLOCO

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 118


State 111

   26 DO_WHILE: TK_DO BLOCO TK_WHILE '(' E ')' . ';'

    ';'  shift, and go to state 119


State 112

   32 CASE: TK_CASE . E TK_DP COMANDOS

    TK_NUM         shift, and go to state 10
    TK_REAL        shift, and go to state 11
    TK_TRUE        shift, and go to state 12
    TK_FALSE       shift, and go to state 13
    TK_CHAR        shift, and go to state 14
    TK_STRING      shift, and go to state 15
    TK_ID          shift, and go to state 21
    TK_CAST_FLOAT  shift, and go to state 25
    TK_CAST_INT    shift, and go to state 26
    NO             shift, and go to state 29
    TK_CAST_CHAR   shift, and go to state 30

    $default  reduce using rule 58 (E)

    E  go to state 120


State 113

   33 CASE: TK_DEFAULT . TK_DP COMANDOS

    TK_DP  shift, and go to state 121


State 114

   28 BLOCO_SWITCH: '{' CASE_LISTA . '}'

    '}'  shift, and go to state 122


State 115

   29 CASE_LISTA: CASE_STMT . CASE_LISTA

    TK_CASE     shift, and go to state 112
    TK_DEFAULT  shift, and go to state 113

    $default  reduce using rule 30 (CASE_LISTA)

    CASE_LISTA  go to state 123
    CASE_STMT   go to state 115
    CASE        go to state 116


State 116

   31 CASE_STMT: CASE .

    $default  reduce using rule 31 (CASE_STMT)


State 117

   23 IF_ELSE: TK_IF '(' E ')' BLOCO TK_ELSE BLOCO .

    $default  reduce using rule 23 (IF_ELSE)


State 118

   24 FOR: TK_FOR '(' E ';' E ';' E . ')' BLOCO
   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63
    GE   shift, and go to state 64
    LE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    ')'  shift, and go to state 124


State 119

   26 DO_WHILE: TK_DO BLOCO TK_WHILE '(' E ')' ';' .

    $default  reduce using rule 26 (DO_WHILE)


State 120

   32 CASE: TK_CASE E . TK_DP COMANDOS
   34 E: E . '>' E
   35  | E . '<' E
   36  | E . EQ E
   37  | E . NE E
   38  | E . GE E
   39  | E . LE E
   40  | E . AND E
   41  | E . OR E
   43  | E . '+' E
   44  | E . '-' E
   45  | E . '*' E
   46  | E . '/' E

    TK_DP  shift, and go to state 125
    AND    shift, and go to state 58
    OR     shift, and go to state 59
    '>'    shift, and go to state 60
    '<'    shift, and go to state 61
    EQ     shift, and go to state 62
    NE     shift, and go to state 63
    GE     shift, and go to state 64
    LE     shift, and go to state 65
    '+'    shift, and go to state 66
    '-'    shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69


State 121

   33 CASE: TK_DEFAULT TK_DP . COMANDOS

    TK_NUM          shift, and go to state 10
    TK_REAL         shift, and go to state 11
    TK_TRUE         shift, and go to state 12
    TK_FALSE        shift, and go to state 13
    TK_CHAR         shift, and go to state 14
    TK_STRING       shift, and go to state 15
    TK_IF           shift, and go to state 16
    TK_FOR          shift, and go to state 17
    TK_WHILE        shift, and go to state 18
    TK_DO           shift, and go to state 19
    TK_SWITCH       shift, and go to state 20
    TK_ID           shift, and go to state 21
    TK_TIPO_INT     shift, and go to state 22
    TK_TIPO_FLOAT   shift, and go to state 23
    TK_TIPO_BOOL    shift, and go to state 24
    TK_CAST_FLOAT   shift, and go to state 25
    TK_CAST_INT     shift, and go to state 26
    TK_TIPO_CHAR    shift, and go to state 27
    TK_TIPO_STRING  shift, and go to state 28
    NO              shift, and go to state 29
    TK_CAST_CHAR    shift, and go to state 30
    '{'             shift, and go to state 7

    TK_CASE     reduce using rule 7 (COMANDOS)
    TK_DEFAULT  reduce using rule 7 (COMANDOS)
    '}'         reduce using rule 7 (COMANDOS)
    $default    reduce using rule 58 (E)

    BLOCO     go to state 31
    COMANDOS  go to state 126
    COMANDO   go to state 33
    IF        go to state 34
    IF_ELSE   go to state 35
    FOR       go to state 36
    WHILE     go to state 37
    DO_WHILE  go to state 38
    SWITCH    go to state 39
    E         go to state 40


State 122

   28 BLOCO_SWITCH: '{' CASE_LISTA '}' .

    $default  reduce using rule 28 (BLOCO_SWITCH)


State 123

   29 CASE_LISTA: CASE_STMT CASE_LISTA .

    $default  reduce using rule 29 (CASE_LISTA)


State 124

   24 FOR: TK_FOR '(' E ';' E ';' E ')' . BLOCO

    '{'  shift, and go to state 7

    BLOCO  go to state 127


State 125

   32 CASE: TK_CASE E TK_DP . COMANDOS

    TK_NUM          shift, and go to state 10
    TK_REAL         shift, and go to state 11
    TK_TRUE         shift, and go to state 12
    TK_FALSE        shift, and go to state 13
    TK_CHAR         shift, and go to state 14
    TK_STRING       shift, and go to state 15
    TK_IF           shift, and go to state 16
    TK_FOR          shift, and go to state 17
    TK_WHILE        shift, and go to state 18
    TK_DO           shift, and go to state 19
    TK_SWITCH       shift, and go to state 20
    TK_ID           shift, and go to state 21
    TK_TIPO_INT     shift, and go to state 22
    TK_TIPO_FLOAT   shift, and go to state 23
    TK_TIPO_BOOL    shift, and go to state 24
    TK_CAST_FLOAT   shift, and go to state 25
    TK_CAST_INT     shift, and go to state 26
    TK_TIPO_CHAR    shift, and go to state 27
    TK_TIPO_STRING  shift, and go to state 28
    NO              shift, and go to state 29
    TK_CAST_CHAR    shift, and go to state 30
    '{'             shift, and go to state 7

    TK_CASE     reduce using rule 7 (COMANDOS)
    TK_DEFAULT  reduce using rule 7 (COMANDOS)
    '}'         reduce using rule 7 (COMANDOS)
    $default    reduce using rule 58 (E)

    BLOCO     go to state 31
    COMANDOS  go to state 128
    COMANDO   go to state 33
    IF        go to state 34
    IF_ELSE   go to state 35
    FOR       go to state 36
    WHILE     go to state 37
    DO_WHILE  go to state 38
    SWITCH    go to state 39
    E         go to state 40


State 126

   33 CASE: TK_DEFAULT TK_DP COMANDOS .

    $default  reduce using rule 33 (CASE)


State 127

   24 FOR: TK_FOR '(' E ';' E ';' E ')' BLOCO .

    $default  reduce using rule 24 (FOR)


State 128

   32 CASE: TK_CASE E TK_DP COMANDOS .

    $default  reduce using rule 32 (CASE)
