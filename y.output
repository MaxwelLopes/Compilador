Terminals unused in grammar

    TK_CAST_BOOL
    TK_FIM
    TK_ERROR


State 50 conflicts: 12 shift/reduce


Grammar

    0 $accept: S $end

    1 S: TK_TIPO_INT TK_MAIN '(' ')' BLOCO

    2 BLOCO: '{' COMANDOS '}'

    3 COMANDOS: COMANDO COMANDOS
    4         | %empty

    5 COMANDO: E ';'
    6        | TK_TIPO_INT TK_ID ';'
    7        | TK_TIPO_FLOAT TK_ID ';'
    8        | TK_TIPO_CHAR TK_ID ';'
    9        | TK_TIPO_BOOL TK_ID ';'

   10 E: E '>' E
   11  | E '<' E
   12  | E EQ E
   13  | E NE E
   14  | E GE E
   15  | E LE E
   16  | E AND E
   17  | E OR E
   18  | NO E
   19  | E '+' E
   20  | E '-' E
   21  | E '*' E
   22  | E '/' E
   23  | TK_ID '=' E
   24  | TK_NUM
   25  | TK_REAL
   26  | TK_CHAR
   27  | TK_FALSE
   28  | TK_TRUE
   29  | TK_CAST_FLOAT E
   30  | TK_CAST_INT E
   31  | TK_CAST_CHAR E
   32  | TK_ID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1
    ')' (41) 1
    '*' (42) 21
    '+' (43) 19
    '-' (45) 20
    '/' (47) 22
    ';' (59) 5 6 7 8 9
    '<' (60) 11
    '=' (61) 23
    '>' (62) 10
    '{' (123) 2
    '}' (125) 2
    error (256)
    TK_NUM (258) 24
    TK_REAL (259) 25
    TK_TRUE (260) 28
    TK_FALSE (261) 27
    TK_CHAR (262) 26
    TK_MAIN (263) 1
    TK_ID (264) 6 7 8 9 23 32
    TK_TIPO_INT (265) 1 6
    TK_TIPO_FLOAT (266) 7
    TK_TIPO_BOOL (267) 9
    TK_CAST_FLOAT (268) 29
    TK_CAST_INT (269) 30
    TK_CAST_BOOL (270)
    TK_TIPO_CHAR (271) 8
    TK_FIM (272)
    TK_ERROR (273)
    AND (274) 16
    OR (275) 17
    NO (276) 18
    EQ (277) 12
    NE (278) 13
    GE (279) 14
    LE (280) 15
    TK_CAST_CHAR (281) 31


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    S (40)
        on left: 1
        on right: 0
    BLOCO (41)
        on left: 2
        on right: 1
    COMANDOS (42)
        on left: 3 4
        on right: 2 3
    COMANDO (43)
        on left: 5 6 7 8 9
        on right: 3
    E (44)
        on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
        on right: 5 10 11 12 13 14 15 16 17 18 19 20 21 22 23 29 30 31


State 0

    0 $accept: . S $end

    TK_TIPO_INT  shift, and go to state 1

    S  go to state 2


State 1

    1 S: TK_TIPO_INT . TK_MAIN '(' ')' BLOCO

    TK_MAIN  shift, and go to state 3


State 2

    0 $accept: S . $end

    $end  shift, and go to state 4


State 3

    1 S: TK_TIPO_INT TK_MAIN . '(' ')' BLOCO

    '('  shift, and go to state 5


State 4

    0 $accept: S $end .

    $default  accept


State 5

    1 S: TK_TIPO_INT TK_MAIN '(' . ')' BLOCO

    ')'  shift, and go to state 6


State 6

    1 S: TK_TIPO_INT TK_MAIN '(' ')' . BLOCO

    '{'  shift, and go to state 7

    BLOCO  go to state 8


State 7

    2 BLOCO: '{' . COMANDOS '}'

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_TIPO_INT    shift, and go to state 15
    TK_TIPO_FLOAT  shift, and go to state 16
    TK_TIPO_BOOL   shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    TK_TIPO_CHAR   shift, and go to state 20
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    $default  reduce using rule 4 (COMANDOS)

    COMANDOS  go to state 23
    COMANDO   go to state 24
    E         go to state 25


State 8

    1 S: TK_TIPO_INT TK_MAIN '(' ')' BLOCO .

    $default  reduce using rule 1 (S)


State 9

   24 E: TK_NUM .

    $default  reduce using rule 24 (E)


State 10

   25 E: TK_REAL .

    $default  reduce using rule 25 (E)


State 11

   28 E: TK_TRUE .

    $default  reduce using rule 28 (E)


State 12

   27 E: TK_FALSE .

    $default  reduce using rule 27 (E)


State 13

   26 E: TK_CHAR .

    $default  reduce using rule 26 (E)


State 14

   23 E: TK_ID . '=' E
   32  | TK_ID .

    '='  shift, and go to state 26

    $default  reduce using rule 32 (E)


State 15

    6 COMANDO: TK_TIPO_INT . TK_ID ';'

    TK_ID  shift, and go to state 27


State 16

    7 COMANDO: TK_TIPO_FLOAT . TK_ID ';'

    TK_ID  shift, and go to state 28


State 17

    9 COMANDO: TK_TIPO_BOOL . TK_ID ';'

    TK_ID  shift, and go to state 29


State 18

   29 E: TK_CAST_FLOAT . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 30


State 19

   30 E: TK_CAST_INT . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 31


State 20

    8 COMANDO: TK_TIPO_CHAR . TK_ID ';'

    TK_ID  shift, and go to state 32


State 21

   18 E: NO . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 33


State 22

   31 E: TK_CAST_CHAR . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 34


State 23

    2 BLOCO: '{' COMANDOS . '}'

    '}'  shift, and go to state 35


State 24

    3 COMANDOS: COMANDO . COMANDOS

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_TIPO_INT    shift, and go to state 15
    TK_TIPO_FLOAT  shift, and go to state 16
    TK_TIPO_BOOL   shift, and go to state 17
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    TK_TIPO_CHAR   shift, and go to state 20
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    $default  reduce using rule 4 (COMANDOS)

    COMANDOS  go to state 36
    COMANDO   go to state 24
    E         go to state 25


State 25

    5 COMANDO: E . ';'
   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    AND  shift, and go to state 37
    OR   shift, and go to state 38
    '>'  shift, and go to state 39
    '<'  shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    GE   shift, and go to state 43
    LE   shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ';'  shift, and go to state 49


State 26

   23 E: TK_ID '=' . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 50


State 27

    6 COMANDO: TK_TIPO_INT TK_ID . ';'

    ';'  shift, and go to state 51


State 28

    7 COMANDO: TK_TIPO_FLOAT TK_ID . ';'

    ';'  shift, and go to state 52


State 29

    9 COMANDO: TK_TIPO_BOOL TK_ID . ';'

    ';'  shift, and go to state 53


State 30

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E
   29  | TK_CAST_FLOAT E .

    $default  reduce using rule 29 (E)


State 31

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E
   30  | TK_CAST_INT E .

    $default  reduce using rule 30 (E)


State 32

    8 COMANDO: TK_TIPO_CHAR TK_ID . ';'

    ';'  shift, and go to state 54


State 33

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   18  | NO E .
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    '>'  shift, and go to state 39
    '<'  shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    GE   shift, and go to state 43
    LE   shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 18 (E)


State 34

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E
   31  | TK_CAST_CHAR E .

    $default  reduce using rule 31 (E)


State 35

    2 BLOCO: '{' COMANDOS '}' .

    $default  reduce using rule 2 (BLOCO)


State 36

    3 COMANDOS: COMANDO COMANDOS .

    $default  reduce using rule 3 (COMANDOS)


State 37

   16 E: E AND . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 55


State 38

   17 E: E OR . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 56


State 39

   10 E: E '>' . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 57


State 40

   11 E: E '<' . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 58


State 41

   12 E: E EQ . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 59


State 42

   13 E: E NE . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 60


State 43

   14 E: E GE . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 61


State 44

   15 E: E LE . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 62


State 45

   19 E: E '+' . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 63


State 46

   20 E: E '-' . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 64


State 47

   21 E: E '*' . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 65


State 48

   22 E: E '/' . E

    TK_NUM         shift, and go to state 9
    TK_REAL        shift, and go to state 10
    TK_TRUE        shift, and go to state 11
    TK_FALSE       shift, and go to state 12
    TK_CHAR        shift, and go to state 13
    TK_ID          shift, and go to state 14
    TK_CAST_FLOAT  shift, and go to state 18
    TK_CAST_INT    shift, and go to state 19
    NO             shift, and go to state 21
    TK_CAST_CHAR   shift, and go to state 22

    E  go to state 66


State 49

    5 COMANDO: E ';' .

    $default  reduce using rule 5 (COMANDO)


State 50

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E
   23  | TK_ID '=' E .

    AND  shift, and go to state 37
    OR   shift, and go to state 38
    '>'  shift, and go to state 39
    '<'  shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    GE   shift, and go to state 43
    LE   shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    AND       [reduce using rule 23 (E)]
    OR        [reduce using rule 23 (E)]
    '>'       [reduce using rule 23 (E)]
    '<'       [reduce using rule 23 (E)]
    EQ        [reduce using rule 23 (E)]
    NE        [reduce using rule 23 (E)]
    GE        [reduce using rule 23 (E)]
    LE        [reduce using rule 23 (E)]
    '+'       [reduce using rule 23 (E)]
    '-'       [reduce using rule 23 (E)]
    '*'       [reduce using rule 23 (E)]
    '/'       [reduce using rule 23 (E)]
    $default  reduce using rule 23 (E)


State 51

    6 COMANDO: TK_TIPO_INT TK_ID ';' .

    $default  reduce using rule 6 (COMANDO)


State 52

    7 COMANDO: TK_TIPO_FLOAT TK_ID ';' .

    $default  reduce using rule 7 (COMANDO)


State 53

    9 COMANDO: TK_TIPO_BOOL TK_ID ';' .

    $default  reduce using rule 9 (COMANDO)


State 54

    8 COMANDO: TK_TIPO_CHAR TK_ID ';' .

    $default  reduce using rule 8 (COMANDO)


State 55

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   16  | E AND E .
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    '>'  shift, and go to state 39
    '<'  shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    GE   shift, and go to state 43
    LE   shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 16 (E)


State 56

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   17  | E OR E .
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    '>'  shift, and go to state 39
    '<'  shift, and go to state 40
    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    GE   shift, and go to state 43
    LE   shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 17 (E)


State 57

   10 E: E . '>' E
   10  | E '>' E .
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 10 (E)


State 58

   10 E: E . '>' E
   11  | E . '<' E
   11  | E '<' E .
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 11 (E)


State 59

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   12  | E EQ E .
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 12 (E)


State 60

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   13  | E NE E .
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 13 (E)


State 61

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   14  | E GE E .
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 14 (E)


State 62

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   15  | E LE E .
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 15 (E)


State 63

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   19  | E '+' E .
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 19 (E)


State 64

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   20  | E '-' E .
   21  | E . '*' E
   22  | E . '/' E

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 20 (E)


State 65

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   21  | E '*' E .
   22  | E . '/' E

    $default  reduce using rule 21 (E)


State 66

   10 E: E . '>' E
   11  | E . '<' E
   12  | E . EQ E
   13  | E . NE E
   14  | E . GE E
   15  | E . LE E
   16  | E . AND E
   17  | E . OR E
   19  | E . '+' E
   20  | E . '-' E
   21  | E . '*' E
   22  | E . '/' E
   22  | E '/' E .

    $default  reduce using rule 22 (E)
